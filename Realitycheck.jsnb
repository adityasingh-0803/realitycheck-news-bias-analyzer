{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "document.body.innerHTML = \"\"; // clear previous content\n\n// Container\nconst container = document.createElement(\"div\");\ncontainer.style.maxWidth = \"700px\";\ncontainer.style.margin = \"20px auto\";\ncontainer.style.background = \"#f9f9f9\";\ncontainer.style.borderRadius = \"12px\";\ncontainer.style.boxShadow = \"0 4px 12px rgba(0,0,0,0.1)\";\ncontainer.style.padding = \"20px 30px\";\ncontainer.style.color = \"#222\";\ncontainer.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\ndocument.body.appendChild(container);\n\n// Title\nconst title = document.createElement(\"h1\");\ntitle.textContent = \"ðŸ§¾ RealityCheck: News Bias & Credibility Analyzer\";\ntitle.style.color = \"#1a73e8\";\ncontainer.appendChild(title);\n\n// Textarea for input\nconst textarea = document.createElement(\"textarea\");\ntextarea.placeholder = \"Paste your news article or headline here...\";\ntextarea.style.width = \"100%\";\ntextarea.style.height = \"150px\";\ntextarea.style.fontSize = \"1em\";\ntextarea.style.padding = \"10px\";\ntextarea.style.borderRadius = \"8px\";\ntextarea.style.border = \"1px solid #ccc\";\ntextarea.style.margin = \"15px 0\";\ncontainer.appendChild(textarea);\n\n// Button\nconst btn = document.createElement(\"button\");\nbtn.textContent = \"Analyze Article\";\nbtn.style.background = \"#1a73e8\";\nbtn.style.color = \"white\";\nbtn.style.fontWeight = \"600\";\nbtn.style.padding = \"12px 25px\";\nbtn.style.border = \"none\";\nbtn.style.borderRadius = \"8px\";\nbtn.style.cursor = \"pointer\";\nbtn.style.fontSize = \"1.1em\";\nbtn.style.marginBottom = \"20px\";\ncontainer.appendChild(btn);\n\n// Result container\nconst resultDiv = document.createElement(\"div\");\ncontainer.appendChild(resultDiv);\n\n// Draw pie chart helper function\n// takes svg container, value percent (0-100), colors [filled, empty], radius\nfunction drawPieChart(svg, percent, colors, radius=60) {\n  const circumference = 2 * Math.PI * radius;\n  const filledLength = (percent / 100) * circumference;\n  const emptyLength = circumference - filledLength;\n\n  // Clear svg content\n  svg.innerHTML = \"\";\n\n  // Background circle (empty)\n  const bgCircle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n  bgCircle.setAttribute(\"r\", radius);\n  bgCircle.setAttribute(\"cx\", radius + 10);\n  bgCircle.setAttribute(\"cy\", radius + 10);\n  bgCircle.setAttribute(\"stroke\", colors[1]);\n  bgCircle.setAttribute(\"stroke-width\", \"20\");\n  bgCircle.setAttribute(\"fill\", \"none\");\n  svg.appendChild(bgCircle);\n\n  // Foreground circle (filled)\n  const fgCircle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n  fgCircle.setAttribute(\"r\", radius);\n  fgCircle.setAttribute(\"cx\", radius + 10);\n  fgCircle.setAttribute(\"cy\", radius + 10);\n  fgCircle.setAttribute(\"stroke\", colors[0]);\n  fgCircle.setAttribute(\"stroke-width\", \"20\");\n  fgCircle.setAttribute(\"fill\", \"none\");\n  fgCircle.setAttribute(\"stroke-dasharray\", `${filledLength} ${emptyLength}`);\n  fgCircle.setAttribute(\"stroke-linecap\", \"round\");\n  fgCircle.setAttribute(\"transform\", `rotate(-90 ${radius + 10} ${radius + 10})`);\n  svg.appendChild(fgCircle);\n\n  // Text in center\n  const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n  text.setAttribute(\"x\", radius + 10);\n  text.setAttribute(\"y\", radius + 18);\n  text.setAttribute(\"text-anchor\", \"middle\");\n  text.setAttribute(\"font-size\", \"24\");\n  text.setAttribute(\"font-family\", \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\");\n  text.setAttribute(\"fill\", \"#333\");\n  text.textContent = percent.toFixed(0) + \"%\";\n  svg.appendChild(text);\n}\n\n// Analysis function same as before\nfunction analyzeText(text) {\n  text = text.toLowerCase();\n\n  // Bias keywords (demo)\n  const leftKeywords = [\"congress\", \"social justice\", \"progressive\", \"secular\"];\n  const rightKeywords = [\"modi\", \"bharatiya\", \"rss\", \"hindutva\", \"nationalism\"];\n\n  let leftCount = 0;\n  let rightCount = 0;\n\n  for (const word of leftKeywords) {\n    if (text.includes(word)) leftCount++;\n  }\n  for (const word of rightKeywords) {\n    if (text.includes(word)) rightCount++;\n  }\n\n  let biasPercent = 50; // neutral\n  let biasLabel = \"Neutral\";\n  if (leftCount > rightCount) {\n    biasPercent = Math.min(50 + (leftCount - rightCount) * 15, 100);\n    biasLabel = \"Left\";\n  } else if (rightCount > leftCount) {\n    biasPercent = Math.max(50 - (rightCount - leftCount) * 15, 0);\n    biasLabel = \"Right\";\n  }\n\n  // Sentiment (simple)\n  const positiveWords = [\"good\", \"happy\", \"success\", \"positive\", \"win\", \"growth\"];\n  const negativeWords = [\"bad\", \"sad\", \"fail\", \"negative\", \"loss\", \"problem\"];\n  let posCount = 0, negCount = 0;\n  for (const w of positiveWords) if (text.includes(w)) posCount++;\n  for (const w of negativeWords) if (text.includes(w)) negCount++;\n\n  let sentimentPercent = 50; // neutral\n  let sentimentLabel = \"Neutral\";\n  if (posCount > negCount) {\n    sentimentPercent = Math.min(50 + (posCount - negCount) * 20, 100);\n    sentimentLabel = \"Positive\";\n  } else if (negCount > posCount) {\n    sentimentPercent = Math.max(50 - (negCount - posCount) * 20, 0);\n    sentimentLabel = \"Negative\";\n  }\n\n  // Credibility (length & suspicious)\n  const suspiciousWords = [\"fake\", \"clickbait\", \"conspiracy\", \"hoax\"];\n  let suspCount = 0;\n  for (const w of suspiciousWords) {\n    if (text.includes(w)) suspCount++;\n  }\n\n  let credibilityPercent = Math.min(Math.max((text.length / 500) * 100 - suspCount * 20, 0), 100);\n  let credibilityLabel = \"Medium\";\n  if (credibilityPercent > 70) credibilityLabel = \"High\";\n  else if (credibilityPercent < 40) credibilityLabel = \"Low\";\n\n  return {\n    biasPercent,\n    biasLabel,\n    sentimentPercent,\n    sentimentLabel,\n    credibilityPercent,\n    credibilityLabel,\n  };\n}\n\n// On analyze button click\nbtn.onclick = () => {\n  const text = textarea.value.trim();\n  if (!text) {\n    alert(\"Please paste some article text first.\");\n    return;\n  }\n\n  const analysis = analyzeText(text);\n\n  // Clear previous results\n  resultDiv.innerHTML = \"\";\n\n  // Show original text\n  const originalText = document.createElement(\"div\");\n  originalText.style.background = \"#fff\";\n  originalText.style.border = \"1px solid #ddd\";\n  originalText.style.padding = \"12px 15px\";\n  originalText.style.borderRadius = \"8px\";\n  originalText.style.marginBottom = \"20px\";\n  originalText.style.whiteSpace = \"pre-wrap\";\n  originalText.style.fontStyle = \"italic\";\n  originalText.textContent = text;\n  resultDiv.appendChild(originalText);\n\n  // Result Title\n  const resultTitle = document.createElement(\"div\");\n  resultTitle.textContent = \"Analysis Result\";\n  resultTitle.style.fontSize = \"1.6em\";\n  resultTitle.style.fontWeight = \"700\";\n  resultTitle.style.margin = \"15px 0 8px\";\n  resultTitle.style.color = \"#1a73e8\";\n  resultDiv.appendChild(resultTitle);\n\n  // Create a flex container for pie charts\n  const chartsContainer = document.createElement(\"div\");\n  chartsContainer.style.display = \"flex\";\n  chartsContainer.style.justifyContent = \"space-around\";\n  chartsContainer.style.marginBottom = \"20px\";\n  resultDiv.appendChild(chartsContainer);\n\n  // Helper to create chart with label and legend\n  function createPieChartSection(titleText, percent, label, colors) {\n    const section = document.createElement(\"div\");\n    section.style.textAlign = \"center\";\n    section.style.width = \"30%\";\n\n    const title = document.createElement(\"div\");\n    title.textContent = titleText;\n    title.style.fontWeight = \"700\";\n    title.style.marginBottom = \"10px\";\n    section.appendChild(title);\n\n    // SVG for pie chart\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttribute(\"width\", \"140\");\n    svg.setAttribute(\"height\", \"140\");\n    svg.style.marginBottom = \"10px\";\n    section.appendChild(svg);\n\n    drawPieChart(svg, percent, colors);\n\n    // Label below chart\n    const labelDiv = document.createElement(\"div\");\n    labelDiv.textContent = label;\n    labelDiv.style.fontWeight = \"600\";\n    labelDiv.style.color = colors[0];\n    section.appendChild(labelDiv);\n\n    return section;\n  }\n\n  // Bias: Map Left (100%) to Right (0%) for pie chart to look nice\n  let biasPercentForChart = analysis.biasLabel === \"Right\"\n    ? 100 - analysis.biasPercent\n    : analysis.biasPercent;\n\n  // Bias colors: red for Left, blue for Right, gray neutral\n  let biasColors;\n  if (analysis.biasLabel === \"Left\") biasColors = [\"#ff4757\", \"#eee\"];\n  else if (analysis.biasLabel === \"Right\") biasColors = [\"#3742fa\", \"#eee\"];\n  else biasColors = [\"#888\", \"#eee\"];\n\n  chartsContainer.appendChild(createPieChartSection(\n    \"Bias (Left â†’ Right)\",\n    biasPercentForChart,\n    `${analysis.biasLabel} (${analysis.biasPercent}%)`,\n    biasColors\n  ));\n\n  // Sentiment colors orange for positive, darkorange for negative, gray neutral\n  let sentimentColors;\n  if (analysis.sentimentLabel === \"Positive\") sentimentColors = [\"#ffa502\", \"#eee\"];\n  else if (analysis.sentimentLabel === \"Negative\") sentimentColors = [\"#ff7f50\", \"#eee\"];\n  else sentimentColors = [\"#888\", \"#eee\"];\n\n  chartsContainer.appendChild(createPieChartSection(\n    \"Sentiment (Negative â†’ Positive)\",\n    analysis.sentimentPercent,\n    `${analysis.sentimentLabel} (${analysis.sentimentPercent}%)`,\n    sentimentColors\n  ));\n\n  // Credibility colors green shades\n  let credibilityColors;\n  if (analysis.credibilityLabel === \"High\") credibilityColors = [\"#2ed573\", \"#eee\"];\n  else if (analysis.credibilityLabel === \"Low\") credibilityColors = [\"#ff6b6b\", \"#eee\"];\n  else credibilityColors = [\"#ffa502\", \"#eee\"];\n\n  chartsContainer.appendChild(createPieChartSection(\n    \"Credibility (Low â†’ High)\",\n    analysis.credibilityPercent,\n    `${analysis.credibilityLabel} (${analysis.credibilityPercent.toFixed(1)}%)`,\n    credibilityColors\n  ));\n\n  // Explanation box\n  const explanation = document.createElement(\"div\");\n  explanation.style.background = \"#e8f0fe\";\n  explanation.style.padding = \"15px 20px\";\n  explanation.style.borderRadius = \"10px\";\n  explanation.style.fontSize = \"0.95em\";\n  explanation.style.color = \"#3a3a3a\";\n  explanation.style.lineHeight = \"1.4\";\n  explanation.style.marginTop = \"15px\";\n\n  explanation.innerHTML = `\n    <strong>Explanation:</strong><br>\n    - <em>Bias</em> is estimated based on keywords indicating left or right political leanings.<br>\n    - <em>Sentiment</em> reflects the positive or negative tone of the text.<br>\n    - <em>Credibility</em> measures text length and presence of suspicious keywords.<br>\n    <br>\n    This is a basic heuristic model for demonstration purposes only.\n  `;\n\n  resultDiv.appendChild(explanation);\n};\n",
      "status": "",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/scribbler",
  "run_on_load": false
}